generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  EMPLOYEE
  ACCOUNTANT
  OUTSOURCE
}

model User {
  id         String @id
  handle     String @unique
  email      String @unique
  role       Role   @map("role")
  lastName   String @map("last_name")
  firstName  String @map("first_name")
  middleName String @map("middle_name")
  password   String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  Ticket    Reciept[]

  @@map("users")
}

model Reciept {
  id        String   @id
  userId    String   @map("user_id")
  imageName String   @map("image_name")
  fn        BigInt
  fp        BigInt
  amount    Decimal
  purpose   String
  paidAt    DateTime @map("paid_at")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  user          User            @relation(fields: [userId], references: [id])
  TicketReciept TicketReciept[]

  @@map("reciepts")
}

enum TicketStatus {
  PENDING
  OK
  FAILED
}

model Ticket {
  id        String       @id
  userId    String       @map("user_id")
  startDate DateTime     @map("start_date")
  endDate   DateTime     @map("end_date")
  status    TicketStatus @default(PENDING)
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime?    @map("updated_at")

  TicketReciept TicketReciept[]

  @@map("tickets")
}

model TicketReciept {
  ticketId  String  @map("ticket_id")
  recieptId String  @map("reciept_id")
  reason    String?

  ticket  Ticket  @relation(fields: [ticketId], references: [id])
  reciept Reciept @relation(fields: [recieptId], references: [id])

  @@id([ticketId, recieptId])
  @@map("ticket_reciepts")
}
